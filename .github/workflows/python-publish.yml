# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: PyPi Publish

on:
  push:
    tags:
      - 'version/*.*.*'

permissions:
  contents: read

jobs:

  version:
    name: Apply version
    runs-on: ubuntu-latest
    steps:

      - name: split
        id: split
        run: |
          TAG=${GITHUB_REF#refs/*/}
          VERSION=${TAG#version/*}
          PARTS=(${VERSION//\./ })
          MAJOR=${PARTS[0]}
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "major=${MAJOR}" >> $GITHUB_OUTPUT
          echo "minor=${PARTS[1]}" >> $GITHUB_OUTPUT
          PARTS2=( $(grep -Eo '[[:digit:]]+|[^[:digit:]]+' <<< ${PARTS[2]} ) )
          echo "patch=${PARTS2[0]}" >> $GITHUB_OUTPUT
          echo "stage=${PARTS2[1]}" >> $GITHUB_OUTPUT
          echo "build=${PARTS2[2]}" >> $GITHUB_OUTPUT

  github-release:
    needs: version
    runs-on: ubuntu-latest
    env:
      version: ${{ needs.version.outputs.version }}
      stage: ${{ needs.version.outputs.stage }}
    steps:
    - uses: actions/checkout@v3
    - name: Create a Release
      uses: marvinpinto/action-automatic-releases@6273874b61ebc8c71f1a61b2d98e234cf389b303
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "v${{ env.version }}"
        prerelease: ${{ env.stage != '' }}
        title: "${{ env.version }}"

  pypi-publish:

    runs-on: ubuntu-latest
    needs: [version, github-release]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Build package
      run: python -m build
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}

